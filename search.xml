<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Machine learning]]></title>
    <url>%2F2019%2F08%2F24%2FMachine-learning%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[本文将作为记录笔者入门机器学习的历程，以Stanford的Andrew Ng的阅读材料为主，顺便会掺杂或多或少的个人理解吧。What is Machine Learning?Two definitions of Machine Learning are offered. Arthur Samuel described it as: “the field of study that gives computers the ability to learn without being explicitly programmed.” This is an older, informal definition.Tom Mitchell provides a more modern definition: “A computer program is said to learn from experience E with respect to some class of tasks T and performance measure P, if its performance at tasks in T, as measured by P, improves with experience E.”Example: playing checkers.E = the experience of playing many games of checkersT = the task of playing checkers.P = the probability that the program will win the next game.In general, any machine learning problem can be assigned to one of two broad classifications:Supervised learning and Unsupervised learning.Supervised LearningIn supervised learning, we are given a data set and already know what our correct output should look like, having the idea that there is a relationship between the input and the output.Supervised learning problems are categorized into “regression” and “classification” problems. In a regression problem, we are trying to predict results within a continuous output, meaning that we are trying to map input variables to some continuous function. In a classification problem, we are instead trying to predict results in a discrete output. In other words, we are trying to map input variables into discrete categories.Example 1:Given data about the size of houses on the real estate market, try to predict their price. Price as a function of size is a continuous output, so this is a regression problem.We could turn this example into a classification problem by instead making our output about whether the house “sells for more or less than the asking price.” Here we are classifying the houses based on price into two discrete categories.Example 2:(a) Regression - Given a picture of a person, we have to predict their age on the basis of the given picture(b) Classification - Given a patient with a tumor, we have to predict whether the tumor is malignant or benign.个人理解：监督式学习的任务可划分为分类和回归问题。而划分的标准就是依据输出值连续与否。就好比数列和函数的关系，对于每一个自变量，数列的输出值都是离散的而函数的输出值都是连续的。Unsupervised LearningUnsupervised learning allows us to approach problems with little or no idea what our results should look like. We can derive structure from data where we don’t necessarily know the effect of the variables.We can derive this structure by clustering the data based on relationships among the variables in the data.With unsupervised learning there is no feedback based on the prediction results.Example:Clustering: Take a collection of 1,000,000 different genes, and find a way to automatically group these genes into groups that are somehow similar or related by different variables, such as lifespan, location, roles, and so on.Non-clustering: The “Cocktail Party Algorithm”, allows you to find structure in a chaotic environment. (i.e. identifying individual voices and music from a mesh of sounds at a cocktail party).监督学习是从输出值的角度划分的，无监督学习（聚类分析）是从输入值的角度划分的，根据输入值有无labels,也就是说如果给定的数据集是有典型特征的话就是监督学习，没有明显特征（所有的数据集中的元素都是看似相同的）就是无监督学习。]]></content>
      <tags>
        <tag>-Machine learning</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[c++与STL]]></title>
    <url>%2F2019%2F08%2F19%2Fc%2B%2B%E4%B8%8ESTL%2F</url>
    <content type="text"><![CDATA[c++的精华与糟粕并存。c++版框架1.和C程序相比，c中的##.h文件大多变成了c##文件，带.h文件依然存在，但并不被c++所推荐使用。2.c++中采用流式输入输出，也会提供一些常用的算法，这种方式和scanf相比的最大优势就是不用再记%d,%s等的占位符，同时也避免了占位符不统一的问题。但是c++的流的输入和输出却是非常缓慢的。3.c++中有“名称空间”，用来缓解复杂程序的组织问题。eg.张三写了一个函数叫my_good_function，李四也写了这样一个函数，但作用和张三的不同。如果有一天需要把他们的程序合在一起用，就会出问题：函数不能重名。虽然c++支持函数重载，但如果这两个函数的参数类型也完全相同，则是不能重载的。一个解决方案是分别把函数写在各自的名称空间里，然后就可以用zhang3:my_good_function()和li4：my_good_function这样的方式进行调用了。4.声明数组是时，数组大小可以使用const声明的常数（c99中并不允许）。引用12345678910111213141516#include&lt;iostream&gt;using namespace std;void swap2(int&amp; a, int&amp; b)&#123; int t = a; a = b; b = t;&#125;int main()&#123; int a = 3, b = 4; swap2(a, b); cout &lt;&lt; a &lt;&lt; " " &lt; b &lt;&lt; "\n"; return 0;&#125;在参数名之前加一个“&amp;”符号，就表示这个参数按照传引用（by reference）的方式传递，而不是C语言里的传值（by value）传递。字符串c语言中的字符串就是字符数组，处处受限。eg.编写一个函数把两个字符串串到一起c++提供了string类型用来替代C语言中的字符数组。用户仍然可以继续使用字符数组当字符串用，但是如果希望程序更加简单，自然，string类型往往是一个不错的选择。c++中的cin /out可以直接读写string类型，直接支持流式读写。string有很多方便的函数和运算符，但速度较慢。123456789101112131415161718#include&lt;iostream&gt;#include&lt;algorithm&gt;#include&lt;string&gt;#include&lt;sstream&gt;using namespace std;int main()&#123; string line; while (getline(cin, line)) &#123; int sum = 0, x; stringstream ss(line); while (ss &gt;&gt; x) sum += x; cout &lt;&lt; sum &lt;&lt; "\n"; &#125; return 0;&#125;]]></content>
      <tags>
        <tag>-算法与数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java设计基础]]></title>
    <url>%2F2019%2F06%2F29%2FJava%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80%2F</url>
    <content type="text"><![CDATA[前言最近寻思着要入门Java，原因有如下几点：o 算法基础薄弱，想好好学习算法，然而《算法》这本书是以Java为基础的，入学近一年，只是粗略地了解学习了C语言，啃起来感觉力不从心。o Java具有很多优良的特性，一方面Java语言具有面向对象，可移植性，强壮性，与安全性等优良特性，另一方面Java技术对各个层次的分布式应用提供了系统的方法与技术，可以看出Java已经从单纯的程序设计语言发展成为支撑Internet 计算的庞大技术体系，因此有必要好好研究。o 本文将作为博主学习Java的主线，一方面记录博主的学习历程，以便于日后Java进阶及巩固，另一方面将其作为博主知识体系的一部分，便于博主不断地完善扩大自己的知识储备。Java 程序设计概述Java是第一种也是唯一一种在National Public Radio 上占用了10分钟时间进行介绍的程序设计语言，并且还得到了$100 000 000的风险投资积金。Java程序设计平台1.Java 存在相容性这个问题，但是Java并不只是一种语言。Java是一个完整的平台，有一个庞大的库，其中包含了很多可重用的代码和一个提供诸如安全性，跨操作系统的可移植性以及自动垃圾收集等服务的执行环境。2.Java具有令人赏心悦目的语法和易于理解的含义（c++并不是这样的），与此同时Java是一个高质量的执行环境，提供了一个强大的库，可以绘制奇特的图形，具有网络连接功能和数据库存取功能等，不需要自己动手编写代码。Java的一些关键术语o 简单性 Java剔除了c++中许多很少使用，难以理解，易混淆的特性。而这些特性带来的麻烦远远多于其带来的好处。在Java里面没有头文件，指针运算（指针语法），结构，联合，操作符重载，虚基类。Java的目标之一是支持开发能够在小型机器上独立运行的软件。基本的解释器以及类支持大约仅为40KB；再加上基础的标准类库和对多线程的支持（基本上是一个自包含的微内核）大约需要增加175KB。o 面向对象 用木匠打一个比方，一个”面向对象的”木匠始终关注的是所制作的椅子，第二位才是所使用的工具；一个”非面向对象的”木匠首先考虑的是所使用的工具。 Java与c++不同的地方在于多重继承，在Java中取而代之的是更简单的接口的概念，同样Java提供了更为丰富的运行时自省功能。o 分布式 Java有一个丰富的例程库，用于处理像HTTP和FTP之类的TCP/IP协议。Java应用程序能够通过URL打开和访问网络上的对象，其便捷程度就好像访问本地文件一样。o 健壮性 Java投入了大量的精力进行早期的问题检测，后期动态的（运行时）检测，并消除了容易出错的情况。。。Java采用的指针模型可以消除重写内存和损坏数据的可能性。Java编译器能够检测许多在其他语言中仅在运行时才能够检测出来的问题。o安全性 使用Java可以构建防病毒，防篡改的系统，Java设计之初就能够防范各种攻击：运行时堆栈溢出。蠕虫和病毒常用的攻击手段 破坏自己的进程空间之外的内存。 未经授权读写文件o 体系结构中立]]></content>
  </entry>
  <entry>
    <title><![CDATA[六一的二三往事]]></title>
    <url>%2F2019%2F05%2F31%2F%E5%85%AD%E4%B8%80%E7%9A%84%E4%BA%8C%E4%B8%89%E5%BE%80%E4%BA%8B%2F</url>
    <content type="text"><![CDATA[写在最前面终于抽出了那么一点点时间回忆一下往事哈哈[_φ_(．．) 写作业]，最近被各种作业压榨，估计未来的一个月内也会如此，想着也没有太多的时间写一点文章，就姑且借六一儿童节之际来发一下春吧哈哈【睡觉没前途(￣o￣) . z Z 】初中的那些人，那些事儿儿童节嘛，就是属于儿童的节日，可是印象里在未进入初中之前是从来没有人给我们沙雕儿童们过儿童节的，毕竟小学的老师们从来也不太在乎这种节日，虽然小学的老师很在乎我（哼哼哼，这个不抬杠，不是本文探讨的主要话题，关于小学的东西以后有时间再回忆），可是并没有认认真真地过过一次。。相反的是，初中的班主任倒是对儿童节格外在意，这一点倒是弥补了我幼小心灵所缺的遗憾。对于初中的老师，我向来是很喜欢的，因为三主科老师都是女老师（当然不是这个了哈哈），不管当时经历了多少囧事，现在回忆起来都是满满的幸福，初中的同学也都很厉害。可是，倒是经历了高中的冲击，大学的隔离，初中同学的关系倒是不那么紧密了，可能最重要的也就那几个吧。。儿童节-永远是我唱歌的舞台因为某次偶然的经历，刚上初中不久之后，音乐老师请人上台唱歌，我就误打误撞地上去了，唱了首带节奏的《找自己》，于是乎，后来同学们都知道班里有个吊蛋货，而且这个吊蛋货还会哼几首歌。当然，我初中的性格和我高中及大学的性格和处事方式是截然不同的，这个是因为经历了好多曲折的事情（具体原因不再解释了，总之是一些很痛苦的经历），现在看来初中时候的我可以说是目前为止我最有生命活力的年龄阶段了，当过牛奶委员，还有各种各样乱七八糟的东西职务，当然大多数是以玩为主，和wxm以及sjj一起闹过不少笑话 ，当时的我们号称三人帮吧（只不过后来因为一些曲折的经历两人强我太远了，不管是在学习还是在最后高考的结果来看，处处被碾压），啊，又扯远了。。初一的儿童节好像就唱了首《找自己》，初二的时候唱了首《我相信》？记得不太清了，因为当时太放肆了哈哈哈哈【(≖ᴗ≖)✧】，初三的时候小苹果最火嘛，于是乎记得比较清的是在kqy和yzf的激励下好好地准备了小苹果，可是因为后来老雪（额 解释一下，那个暴躁的年级主任），又正值在中招之际，初三的儿童节不了了之了。。当时，这个事情在学校引起了轩然大波，雪金岭用全校广播对9.12班（我们班）及其班主任勒令禁止一切娱乐活动，并且对班主任进行了通报批评，这个有必要好好地谈谈，长大多年后再回头看这件事情，真心地觉得初中的班主任和那些老师们是真的好，尤其是班主任突破传统规矩特意让男女生搭配混坐，这个可以说是开辟了当时一中的先河了吧哈哈（后来升了高中便也再也没有享受过这种待遇），也因此当时班里有好多谈恋爱的，当然没我什么事，因为当时太放肆了，根本没有想过这种事情哈哈，讲真，真正考虑过这些事情的还是在大学后（笑），当时唯一的想法就是咋想着多整整kqy（虽然后来的关系闹得很僵，再后来又不知不觉地和好了），咋想着上课多掉掉蛋，咋想着让自己更加奔放一些，和班里当时不少女汉子们打成一片倒是真事，不过，现在看来，当时好多值得珍惜的朋友倒是连个微信都没有，后来经过了一些或多或少的事情，倒是散了不少，而高中时期因为经常分班，也只和在那四个班的初中同学联系的比较多，当然很庆幸的是有陪我走到最后的几个初中同学了（当然都是比我要强太多了），倒也是结下了非同寻常的友谊吧。后来的儿童节上了高中之后不要说儿童节了，连春节都没有好好过过（笑），倒是经历了高中几年的煎熬，越长大越对儿童节这种节日产生了依恋之情，想起儿童节总会让我忆起初中的沙雕人，沙雕事，那些曾经放肆，轻狂的日子，倒是越长大感觉活的越不像真实的自己了，现在看来初中班主任曾经说过她做的所有的一切都是为了让我们所有人留下最美好的回忆，这点看来班主任倒是真的很爱我们，尤其爱我哈哈哈哈（此处省略一万字），倒是自己因为后来高中的一些事情也很多年没有去见那些人了，高考之后也仅仅是在寒假一个风雪交加的夜晚抽了个时间回学校看了一眼，也只是匆匆的那一眼而已。。结语聊了那么多，写下本文的目的只是怀念一下过去，正如杨绛所说：世间好事不坚牢，彩云易散琉璃脆。可能人就是矫情吧，初中怀念小学，高中怀念初中，大学后又怀念过去，说不定以后真正毕业了倒是要怀念大学了，现在我的大学唯一值得怀念的就是经历了大一下被717774当做沙雕而失眠的那段日子吧(滑稽)。不知道还有没有人祝我儿童节快乐哈哈~​ ​ 儿童节-完结]]></content>
      <tags>
        <tag>日记随笔</tag>
      </tags>
  </entry>
</search>
